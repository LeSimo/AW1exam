{"ast":null,"code":"var _jsxFileName = \"/home/kali/Desktop/AW1/exam/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport API from './API/API'; //import {Redirect, Route,Link} from 'react-router-dom';\n//import {Switch} from 'react-router-dom';        //modified before it was react-router\n//import { withRouter } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport NavBar from './Components/NavBar';\nimport SideBar from './Components/SideBar';\nimport { AuthContext } from './auth/AuthContext';\nimport { Row, Col } from 'react-bootstrap';\n\nfunction App(props) {\n  const [cars, setCars] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [filters, setFilters] = useState({\n    activeBrands: [],\n    activeCategories: []\n  });\n  const [loginStatus, setLoginStatus] = useState({\n    isLoggedIn: false,\n    loginError: false,\n    username: '',\n    userId: ''\n  });\n  const [rents, setRents] = useState([]); // Need to start with loading: false to check if user already is logged in\n\n  const [loading, setLoading] = useState(false); // Error message received by an API call\n\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleErrors = errorObj => {\n    if (errorObj) {\n      if (errorObj.status && errorObj.status === 401) {\n        // isLoggedIn false redirects to /cars\n        setTimeout(() => {\n          setLoginStatus({\n            isLoggedIn: false,\n            loginError: false,\n            user: loginStatus.user\n          });\n          setErrorMsg('');\n        }, 2000);\n      }\n\n      const err0 = errorObj.errors[0];\n      const errorString = err0.param + ': ' + err0.msg;\n      setErrorMsg(errorString);\n      setLoading(false);\n    }\n  };\n\n  const loadInitialData = () => {\n    const promises = [API.getCars, API.getBrands, API.getCategories];\n    Promise.all(promises).then(([cars, brands, categories]) => {\n      setCars(cars);\n      setBrands(brands);\n      setCategories(categories);\n    }).catch(errorObj => {\n      handleErrors(errorObj);\n    });\n  };\n\n  const loadLoggedData = () => {\n    const promise = API.getRents(loginStatus.userId);\n    Promise.resolve(promise).then(rents => {\n      setRents(rents);\n    }).catch(errorObj => {\n      handleErrors(errorObj);\n    });\n  }; // if user is not logged retrieve the public data (default)\n  // if user is logged retrieve the private and public data \n\n\n  useEffect(() => {\n    if (loginStatus.isLoggedIn) {\n      API.isAuthenticated().then(userInfo => {\n        setLoginStatus({\n          isLoggedIn: true,\n          username: userInfo.name,\n          userId: userInfo.userID,\n          loginError: loginStatus.loginError\n        });\n        loadLoggedData(); //if (cars.length === 0 || brands.length === 0 || categories.length === 0)          //se per errore non sono stati caricati i dati iniziali\n        //loadInitialData();\n      }).catch(errorObj => {\n        if (errorObj.status && errorObj.status === 401) {\n          // setting isLoggedIn to false redirects to /login\n          setLoginStatus({\n            isLoggedIn: false,\n            loginError: false,\n            user: loginStatus.user\n          });\n          setLoading(false);\n          setErrorMsg('');\n        }\n      });\n    } else {\n      loadInitialData();\n    }\n  }, []);\n\n  const cancelErrorMsg = () => {\n    setErrorMsg('');\n  }; // logout method\n\n\n  const userLogout = () => {\n    API.userLogout().then(() => {\n      setLoginStatus({\n        isLoggedIn: false,\n        username: '',\n        userId: '',\n        loginError: loginStatus.loginError\n      });\n    });\n  };\n\n  const setLoggedInUser = user => {\n    setLoginStatus({\n      isLoggedIn: true,\n      username: user.name,\n      userId: user.userID,\n      loginError: false\n    });\n    setLoading(true);\n    loadInitialData();\n  };\n\n  const deleteRent = rent => {\n    API.deleteRent(rent.invoice).then(() => {\n      API.getRents().then(rents => setRents(rents));\n    }).catch(errorObj => {\n      handleErrors(errorObj);\n    });\n  };\n\n  const addRent = rent => {\n    API.addRent(rent).then(() => {\n      API.getRents().then(rents => setRents(rents));\n    }).catch(errorObj => {\n      handleErrors(errorObj);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"vheight-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    render: props => {\n      if (loginStatus.isLoggedIn) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 20\n        }\n      }); // da reindirizzare alla pagina del configuratore \n      else return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/cars\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(NavBar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Col, {\n          sm: 12,\n          bg: \"light\",\n          id: \"left-sidebar\",\n          className: \"collapse d-sm-block \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(SideBar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }\n        })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kali/Desktop/AW1/exam/client/src/App.js"],"names":["React","useState","useEffect","API","BrowserRouter","Router","Route","Switch","Redirect","NavBar","SideBar","AuthContext","Row","Col","App","props","cars","setCars","brands","setBrands","categories","setCategories","filters","setFilters","activeBrands","activeCategories","loginStatus","setLoginStatus","isLoggedIn","loginError","username","userId","rents","setRents","loading","setLoading","errorMsg","setErrorMsg","handleErrors","errorObj","status","setTimeout","user","err0","errors","errorString","param","msg","loadInitialData","promises","getCars","getBrands","getCategories","Promise","all","then","catch","loadLoggedData","promise","getRents","resolve","isAuthenticated","userInfo","name","userID","cancelErrorMsg","userLogout","setLoggedInUser","deleteRent","rent","invoice","addRent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,WAAhB,C,CACA;AACA;AACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAAQC,GAAR,EAAYC,GAAZ,QAAsB,iBAAtB;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC;AAAEuB,IAAAA,YAAY,EAAE,EAAhB;AAAoBC,IAAAA,gBAAgB,EAAE;AAAtC,GAAD,CAAtC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC;AAAE2B,IAAAA,UAAU,EAAE,KAAd;AAAqBC,IAAAA,UAAU,EAAE,KAAjC;AAAwCC,IAAAA,QAAQ,EAAE,EAAlD;AAAsDC,IAAAA,MAAM,EAAE;AAA9D,GAAD,CAA9C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,EAAD,CAAlC,CANkB,CAQlB;;AACA,QAAM,CAACiC,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAC,KAAD,CAAtC,CATkB,CAWlB;;AACA,QAAM,CAACmC,QAAD,EAAWC,WAAX,IAA0BpC,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMqC,YAAY,GAAIC,QAAD,IAAc;AACjC,QAAIA,QAAJ,EAAc;AACZ,UAAIA,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,GAA3C,EAAgD;AAC9C;AACAC,QAAAA,UAAU,CAAC,MAAM;AACfd,UAAAA,cAAc,CAAC;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,UAAU,EAAE,KAAjC;AAAwCa,YAAAA,IAAI,EAAEhB,WAAW,CAACgB;AAA1D,WAAD,CAAd;AACAL,UAAAA,WAAW,CAAC,EAAD,CAAX;AACD,SAHS,EAGP,IAHO,CAAV;AAID;;AACD,YAAMM,IAAI,GAAGJ,QAAQ,CAACK,MAAT,CAAgB,CAAhB,CAAb;AACA,YAAMC,WAAW,GAAGF,IAAI,CAACG,KAAL,GAAa,IAAb,GAAoBH,IAAI,CAACI,GAA7C;AACAV,MAAAA,WAAW,CAACQ,WAAD,CAAX;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAdD;;AAgBA,QAAMa,eAAe,GAAG,MAAM;AAC5B,UAAMC,QAAQ,GAAG,CAAC9C,GAAG,CAAC+C,OAAL,EAAc/C,GAAG,CAACgD,SAAlB,EAA6BhD,GAAG,CAACiD,aAAjC,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBM,IAAtB,CACE,CAAC,CAACvC,IAAD,EAAOE,MAAP,EAAeE,UAAf,CAAD,KAAgC;AAC9BH,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,MAAAA,aAAa,CAACD,UAAD,CAAb;AACD,KALH,EAMEoC,KANF,CAOGjB,QAAD,IAAc;AACZD,MAAAA,YAAY,CAACC,QAAD,CAAZ;AACD,KATH;AAWD,GAbD;;AAeD,QAAMkB,cAAc,GAAG,MAAM;AAC1B,UAAMC,OAAO,GAAGvD,GAAG,CAACwD,QAAJ,CAAajC,WAAW,CAACK,MAAzB,CAAhB;AACAsB,IAAAA,OAAO,CAACO,OAAR,CAAgBF,OAAhB,EAAyBH,IAAzB,CAA+BvB,KAAD,IAAW;AACvCC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD,EAEGwB,KAFH,CAGGjB,QAAD,IAAc;AACZD,MAAAA,YAAY,CAACC,QAAD,CAAZ;AACD,KALH;AAQD,GAVF,CA7CmB,CA0DlB;AACA;;;AACArC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,WAAW,CAACE,UAAhB,EAA4B;AAC1BzB,MAAAA,GAAG,CAAC0D,eAAJ,GAAsBN,IAAtB,CAA4BO,QAAD,IAAc;AACvCnC,QAAAA,cAAc,CAAC;AAAEC,UAAAA,UAAU,EAAE,IAAd;AAAoBE,UAAAA,QAAQ,EAAEgC,QAAQ,CAACC,IAAvC;AAA6ChC,UAAAA,MAAM,EAAE+B,QAAQ,CAACE,MAA9D;AAAsEnC,UAAAA,UAAU,EAAEH,WAAW,CAACG;AAA9F,SAAD,CAAd;AACA4B,QAAAA,cAAc,GAFyB,CAGvC;AACE;AACH,OALD,EAKGD,KALH,CAKUjB,QAAD,IAAc;AACrB,YAAIA,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,GAA3C,EAAgD;AAC9C;AACAb,UAAAA,cAAc,CAAC;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,UAAU,EAAE,KAAjC;AAAwCa,YAAAA,IAAI,EAAEhB,WAAW,CAACgB;AAA1D,WAAD,CAAd;AACAP,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,UAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,OAZD;AAaD,KAdD,MAcO;AACLW,MAAAA,eAAe;AAChB;AACF,GAlBQ,EAkBP,EAlBO,CAAT;;AAoBA,QAAMiB,cAAc,GAAG,MAAM;AAC3B5B,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAFD,CAhFkB,CAoFlB;;;AACA,QAAM6B,UAAU,GAAG,MAAM;AACvB/D,IAAAA,GAAG,CAAC+D,UAAJ,GAAiBX,IAAjB,CACE,MAAM;AAAE5B,MAAAA,cAAc,CAAC;AAAEC,QAAAA,UAAU,EAAE,KAAd;AAAqBE,QAAAA,QAAQ,EAAE,EAA/B;AAAmCC,QAAAA,MAAM,EAAE,EAA3C;AAA+CF,QAAAA,UAAU,EAAEH,WAAW,CAACG;AAAvE,OAAD,CAAd;AAAqG,KAD/G;AAGD,GAJD;;AAMA,QAAMsC,eAAe,GAAIzB,IAAD,IAAU;AAChCf,IAAAA,cAAc,CAAC;AAAEC,MAAAA,UAAU,EAAE,IAAd;AAAoBE,MAAAA,QAAQ,EAAEY,IAAI,CAACqB,IAAnC;AAAyChC,MAAAA,MAAM,EAAEW,IAAI,CAACsB,MAAtD;AAA8DnC,MAAAA,UAAU,EAAE;AAA1E,KAAD,CAAd;AACAM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAa,IAAAA,eAAe;AAChB,GAJD;;AAMA,QAAMoB,UAAU,GAAIC,IAAD,IAAU;AAC3BlE,IAAAA,GAAG,CAACiE,UAAJ,CAAeC,IAAI,CAACC,OAApB,EAA6Bf,IAA7B,CAAkC,MAAM;AACtCpD,MAAAA,GAAG,CAACwD,QAAJ,GAAeJ,IAAf,CAAqBvB,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAAvC;AACD,KAFD,EAEGwB,KAFH,CAGGjB,QAAD,IAAc;AACZD,MAAAA,YAAY,CAACC,QAAD,CAAZ;AACD,KALH;AAOD,GARD;;AAUA,QAAMgC,OAAO,GAAIF,IAAD,IAAU;AACxBlE,IAAAA,GAAG,CAACoE,OAAJ,CAAYF,IAAZ,EAAkBd,IAAlB,CAAuB,MAAM;AAC3BpD,MAAAA,GAAG,CAACwD,QAAJ,GAAeJ,IAAf,CAAqBvB,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAAvC;AACD,KAFD,EAEGwB,KAFH,CAGGjB,QAAD,IAAc;AACZD,MAAAA,YAAY,CAACC,QAAD,CAAZ;AACD,KALH;AAOD,GARD;;AAeA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,MAAM,EAAGxB,KAAD,IAAW;AACjC,UAAGW,WAAW,CAACE,UAAf,EACE,oBAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CADF,CAC8B;AAD9B,WAGE,oBAAO,uDACP,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADO,eAGL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHK,eAIL,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAC,OAAhB;AAAwB,UAAA,EAAE,EAAC,cAA3B;AAA0C,UAAA,SAAS,EAAC,sBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CAJK,CAAP;AASH,KAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,CADF,CADF;AA0BD;;AAED,eAAed,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport API from './API/API'\n//import {Redirect, Route,Link} from 'react-router-dom';\n//import {Switch} from 'react-router-dom';        //modified before it was react-router\n//import { withRouter } from 'react-router-dom';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport NavBar from './Components/NavBar'\nimport SideBar from './Components/SideBar'\nimport { AuthContext } from './auth/AuthContext'\nimport {Row,Col} from 'react-bootstrap'\n\n\nfunction App(props) {\n  const [cars, setCars] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [filters, setFilters] = useState({ activeBrands: [], activeCategories: [] });\n  const [loginStatus, setLoginStatus] = useState({ isLoggedIn: false, loginError: false, username: '', userId: '' });\n  const [rents, setRents] = useState([]);\n\n  // Need to start with loading: false to check if user already is logged in\n  const [loading, setLoading] = useState(false);\n\n  // Error message received by an API call\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleErrors = (errorObj) => {\n    if (errorObj) {\n      if (errorObj.status && errorObj.status === 401) {\n        // isLoggedIn false redirects to /cars\n        setTimeout(() => {\n          setLoginStatus({ isLoggedIn: false, loginError: false, user: loginStatus.user });\n          setErrorMsg('');\n        }, 2000);\n      }\n      const err0 = errorObj.errors[0];\n      const errorString = err0.param + ': ' + err0.msg;\n      setErrorMsg(errorString);\n      setLoading(false);\n    }\n  };\n\n  const loadInitialData = () => {\n    const promises = [API.getCars, API.getBrands, API.getCategories];\n    Promise.all(promises).then(\n      ([cars, brands, categories]) => {\n        setCars(cars);\n        setBrands(brands);\n        setCategories(categories);\n      }\n    ).catch(\n      (errorObj) => {\n        handleErrors(errorObj);\n      }\n    );\n  };\n\n const loadLoggedData = () => {\n    const promise = API.getRents(loginStatus.userId);\n    Promise.resolve(promise).then((rents) => {\n      setRents(rents);\n    }).catch(\n      (errorObj) => {\n        handleErrors(errorObj);\n      }\n    );\n\n  }\n\n\n  // if user is not logged retrieve the public data (default)\n  // if user is logged retrieve the private and public data \n  useEffect(() => {\n    if (loginStatus.isLoggedIn) {\n      API.isAuthenticated().then((userInfo) => {\n        setLoginStatus({ isLoggedIn: true, username: userInfo.name, userId: userInfo.userID, loginError: loginStatus.loginError });\n        loadLoggedData();\n        //if (cars.length === 0 || brands.length === 0 || categories.length === 0)          //se per errore non sono stati caricati i dati iniziali\n          //loadInitialData();\n      }).catch((errorObj) => {\n        if (errorObj.status && errorObj.status === 401) {\n          // setting isLoggedIn to false redirects to /login\n          setLoginStatus({ isLoggedIn: false, loginError: false, user: loginStatus.user });\n          setLoading(false);\n          setErrorMsg('');\n        }\n      })\n    } else {\n      loadInitialData();\n    }\n  },[]);\n\n  const cancelErrorMsg = () => {\n    setErrorMsg('');\n  }\n\n  // logout method\n  const userLogout = () => {\n    API.userLogout().then(\n      () => { setLoginStatus({ isLoggedIn: false, username: '', userId: '', loginError: loginStatus.loginError }) }\n    );\n  }\n\n  const setLoggedInUser = (user) => {\n    setLoginStatus({ isLoggedIn: true, username: user.name, userId: user.userID, loginError: false });\n    setLoading(true);\n    loadInitialData();\n  }\n\n  const deleteRent = (rent) => {\n    API.deleteRent(rent.invoice).then(() => {\n      API.getRents().then((rents) => setRents(rents))\n    }).catch(\n      (errorObj) => {\n        handleErrors(errorObj);\n      }\n    );\n  }\n\n  const addRent = (rent) => {\n    API.addRent(rent).then(() => {\n      API.getRents().then((rents) => setRents(rents))\n    }).catch(\n      (errorObj) => {\n        handleErrors(errorObj);\n      }\n    );\n  }\n\n\n\n\n\n\n  return (\n    <Router>\n      <Row className=\"vheight-100\">\n      <Switch>\n        <Route path='/' render={(props) => {\n          if(loginStatus.isLoggedIn)\n            return <Redirect to='/' />  // da reindirizzare alla pagina del configuratore \n          else\n            return <>\n            <Redirect to='/cars' />\n            \n              <NavBar />\n              <Col sm={12} bg=\"light\" id=\"left-sidebar\" className=\"collapse d-sm-block \">\n              <SideBar></SideBar>\n              </Col>\n              \n            </>\n        }}>\n\n        </Route>\n      </Switch>\n      </Row>\n      \n\n      </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}