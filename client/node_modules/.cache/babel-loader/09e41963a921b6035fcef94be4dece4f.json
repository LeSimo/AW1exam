{"ast":null,"code":"var _jsxFileName = \"/home/kali/Desktop/AW1/exam/client/src/Components/Configurator.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, Row, Col, Badge } from 'react-bootstrap';\nimport API from './../API/API';\n\nfunction CategoryOption(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, props.category));\n}\n\nclass Configurator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateAvailableCars = carsId => {\n      if (JSON.stringify(carsId) !== JSON.stringify(this.state.availableCars)) {\n        this.setState({\n          availableCars: carsId\n        });\n      }\n    };\n\n    this.updateAvailableFilteredCars = carsId => {\n      if (JSON.stringify(carsId) !== JSON.stringify(this.state.filteredavailableCars)) {\n        this.setState({\n          filteredavailableCars: carsId\n        });\n      }\n    };\n\n    this.updateCost = cost => {\n      this.setState({\n        cost: cost\n      });\n    };\n\n    this.updateField = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const form = event.currentTarget;\n\n      if (!form.checkValidity()) {\n        form.reportValidity();\n      } else {\n        this.props.setRent({\n          CarId: this.state.filteredavailableCars[0],\n          UserId: this.props.UserId,\n          cost: this.state.cost,\n          StartDate: this.state.StartDate,\n          EndDate: this.state.EndDate\n        });\n        this.setState({\n          submitted: true\n        });\n      }\n    };\n\n    this.state = {\n      StartDate: '',\n      EndDate: '',\n      category: '',\n      ageType: \"less than 65\",\n      additionalDriver: \"NO\",\n      extraInsurance: false,\n      kmType: \"less than 150 km/day\",\n      submitted: false,\n      availableCars: [],\n      filteredavailableCars: [],\n      cost: null\n    };\n  }\n\n  render() {\n    if (this.state.submitted) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }\n    });\n    return /*#__PURE__*/React.createElement(Row, {\n      className: \"vheight-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      className: \"below-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      method: \"POST\",\n      onSubmit: event => this.handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Rent Configurator\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Dates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, \"Starting Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"StartDate\",\n      value: this.state.StartDate,\n      min: moment().format('YYYY-MM-DD'),\n      max: this.state.EndDate,\n      onChange: ev => this.updateField(ev.target.name, ev.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }\n    }, \"Ending Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"EndDate\",\n      value: this.state.EndDate,\n      min: this.state.StartDate,\n      onChange: ev => this.updateField(ev.target.name, ev.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, \"Car's Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"category\",\n      value: this.state.category,\n      onChange: ev => this.updateField(ev.target.name, ev.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }, \" \"), this.props.categories.map(cat => /*#__PURE__*/React.createElement(CategoryOption, {\n      key: cat,\n      category: cat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 77\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    }, \"Driver's Age\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"ageType\",\n      value: this.state.ageType,\n      onChange: ev => this.updateField(ev.target.name, ev.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }\n    }, \"less than 25\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, \"less than 65\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, \"more than 65\"))))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, \"Additional Drivers\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"additionalDriver\",\n      value: this.state.additionalDriver,\n      onChange: ev => this.updateField(ev.target.name, ev.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }, \"NO\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }\n    }, \"5\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \"Km per day\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"kmType\",\n      value: this.state.kmType,\n      onChange: ev => this.updateField(ev.target.name, ev.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, \"less than 50 km/day\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, \"less than 150 km/day\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    }, \"unlimited\"))))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"extraInsurance\",\n      label: \"Additional insurance?\",\n      value: this.state.extraInsurance,\n      onChange: ev => this.updateField(ev.target.name, ev.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      disabled: !this.state.category || Object.keys(this.state.filteredavailableCars).length === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"Choose and Pay\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, \"Available Cars:  \", (!this.state.StartDate || !this.state.EndDate) && /*#__PURE__*/React.createElement(Badge, {\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 93\n      }\n    }, \"Insert Data Interval please\"), this.state.StartDate && this.state.EndDate && /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(GetAvailableCars, {\n      handleErrors: this.props.handleErrors,\n      updateAvailableCars: this.updateAvailableCars,\n      StartDate: this.state.StartDate,\n      EndDate: this.state.EndDate,\n      availableCars: this.state.availableCars,\n      category: this.state.category,\n      cars: this.props.cars,\n      updateAvailableFilteredCars: this.updateAvailableFilteredCars,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }), !this.state.category && /*#__PURE__*/React.createElement(Badge, {\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 56\n      }\n    }, \"Insert Category for price\"))), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, this.state.StartDate && this.state.EndDate && this.state.category && /*#__PURE__*/React.createElement(PriceCalculator, {\n      cars: this.props.cars,\n      availableCars: this.state.availableCars,\n      category: this.state.category,\n      StartDate: this.state.StartDate,\n      EndDate: this.state.EndDate,\n      ageType: this.state.ageType,\n      additionalDriver: this.state.additionalDriver,\n      extraInsurance: this.state.extraInsurance,\n      kmType: this.state.kmType,\n      rents: this.props.rents,\n      updateCost: this.updateCost,\n      cost: this.state.cost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}\n\nfunction GetAvailableCars(props) {\n  let tmp;\n  API.availableCars(props.StartDate, props.EndDate).then(carsId => {\n    tmp = carsId.map(c => {\n      return c.id;\n    });\n    props.updateAvailableCars(tmp);\n  }).catch(errorObj => {\n    props.handleErrors(errorObj);\n  }); //Condition for filter by category\n\n  let availableCarsObjects = props.cars.filter(c => {\n    if (props.availableCars.includes(c.id)) return true;\n  }); // Se filtro category attivo\n\n  let filteredCars = [];\n\n  if (props.category) {\n    filteredCars = availableCarsObjects.filter(car => {\n      if (car.category === props.category) {\n        return true;\n      }\n    });\n  }\n\n  let filteredCarsId = filteredCars.map(c => {\n    return c.id;\n  });\n  props.updateAvailableFilteredCars(filteredCarsId);\n\n  if (!props.category) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, Object.keys(props.availableCars).length)));\n  } else {\n    // stampo il numero aggiornato con le categorie\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }, Object.keys(filteredCars).length, \" \"), /*#__PURE__*/React.createElement(Badge, {\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 87\n      }\n    }, \"in this category\")));\n  }\n}\n\nfunction PriceCalculator(props) {\n  if (Object.keys(props.availableCars).length === 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \" No available cars\");\n  } //return <>Prezzo</>\n\n\n  let price = 0; // Choose the car's category\n\n  switch (props.category) {\n    case \"A\":\n      price += 80;\n      break;\n\n    case 'B':\n      price += 70;\n      break;\n\n    case 'C':\n      price += 60;\n      break;\n\n    case 'D':\n      price += 50;\n      break;\n\n    case 'E':\n      price += 40;\n      break;\n  }\n\n  let a = moment(props.EndDate);\n  let b = moment(props.StartDate);\n  let days = a.diff(b, 'days');\n  days += 1; // Days of rent\n\n  price = price * days; // Km options\n\n  let kmOption = 1;\n\n  if (props.kmType === \"less than 50 km/day\") {\n    kmOption = 0.95;\n  }\n\n  if (props.kmType === \"unlimited\") {\n    kmOption = 1.05;\n  }\n\n  let driverOption = 1;\n\n  if (props.ageType === \"less than 25\") {\n    driverOption = 1.05;\n  }\n\n  if (props.ageType === \"more than 65\") {\n    driverOption = 1.1;\n  }\n\n  let additionalDriverOption = 1;\n\n  if (props.additionalDriver != \"NO\") {\n    additionalDriverOption = 1.15;\n  }\n\n  let extraInsuranceOption = 1;\n\n  if (props.extraInsurance) {\n    extraInsuranceOption = 1.2;\n  }\n\n  let frequentOption = 1;\n  const pastRents = props.rents.filter(rent => {\n    if (moment(rent.StartDate).isBefore(moment())) return true;\n  });\n\n  if (Object.keys(pastRents).length >= 3) {\n    frequentOption = 0.9;\n  } // filtro per il 10 % di veicoli per categoria\n\n\n  let filteredCars = props.cars.filter(c => {\n    if (c.category === props.category) {\n      return true;\n    }\n  });\n  let totalCarsNumber = Object.keys(filteredCars).length; // Ragionamento come nel calcolo delle auto per categoria disponibili\n\n  let availableCarsObjects = props.cars.filter(c => {\n    if (props.availableCars.includes(c.id)) return true;\n  });\n\n  if (props.category) {\n    filteredCars = availableCarsObjects.filter(car => {\n      if (car.category === props.category) {\n        return true;\n      }\n    });\n  }\n\n  let availableCarsNumber = Object.keys(filteredCars).length;\n  let garageOption = 1;\n\n  if (availableCarsNumber < totalCarsNumber * 0.1) {\n    garageOption = 1.1;\n  }\n\n  let finalPrice = price * kmOption * driverOption * additionalDriverOption * extraInsuranceOption * garageOption * frequentOption;\n\n  if (finalPrice) {\n    finalPrice = finalPrice.toFixed(2);\n\n    if (finalPrice !== props.cost) {\n      props.updateCost(finalPrice);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    variant: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 19\n    }\n  }, props.cost, \" \\u20AC \")));\n}\n\nexport default Configurator;","map":{"version":3,"sources":["/home/kali/Desktop/AW1/exam/client/src/Components/Configurator.js"],"names":["React","moment","Redirect","Button","Form","Row","Col","Badge","API","CategoryOption","props","category","Configurator","Component","constructor","updateAvailableCars","carsId","JSON","stringify","state","availableCars","setState","updateAvailableFilteredCars","filteredavailableCars","updateCost","cost","updateField","name","value","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","reportValidity","setRent","CarId","UserId","StartDate","EndDate","submitted","ageType","additionalDriver","extraInsurance","kmType","render","format","ev","target","categories","map","cat","checked","Object","keys","length","handleErrors","cars","rents","GetAvailableCars","tmp","then","c","id","catch","errorObj","availableCarsObjects","filter","includes","filteredCars","car","filteredCarsId","PriceCalculator","price","a","b","days","diff","kmOption","driverOption","additionalDriverOption","extraInsuranceOption","frequentOption","pastRents","rent","isBefore","totalCarsNumber","availableCarsNumber","garageOption","finalPrice","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { Redirect } from 'react-router-dom';\nimport { Button,Form, Row, Col, Badge } from 'react-bootstrap';\nimport API from './../API/API'\n\n\n\nfunction CategoryOption(props) {\n    return <>\n        <option>{props.category}</option>\n    </>\n}\n\n\n\n\nclass Configurator extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { StartDate: '', EndDate: '', category: '', ageType: \"less than 65\", additionalDriver: \"NO\",\n         extraInsurance: false, kmType: \"less than 150 km/day\", submitted: false, availableCars: [], filteredavailableCars: [], cost: null }\n    }\n\n    updateAvailableCars = (carsId) => {\n        if (JSON.stringify(carsId) !== JSON.stringify(this.state.availableCars)) {\n            this.setState({ availableCars: carsId })\n        }\n    }\n\n    updateAvailableFilteredCars = (carsId) => {\n        if (JSON.stringify(carsId) !== JSON.stringify(this.state.filteredavailableCars)) {\n            this.setState({ filteredavailableCars: carsId })\n        }\n    }\n\n    updateCost = (cost) => {\n        this.setState({cost : cost})\n    }\n\n\n    updateField = (name, value) => {\n        this.setState({ [name]: value });\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        if (!form.checkValidity()) {\n            form.reportValidity();\n        } else {\n            this.props.setRent({\n                CarId : this.state.filteredavailableCars[0],\n                UserId : this.props.UserId,\n                cost : this.state.cost,\n                StartDate : this.state.StartDate,\n                EndDate : this.state.EndDate\n            })\n            this.setState({ submitted: true });\n        }\n    }\n\n\n    render() {\n        if (this.state.submitted)\n            return <Redirect to='/payment' />;\n        return (\n            <Row className=\"vheight-100\">\n                <Col sm={4}></Col>\n                <Col md={4} className=\"below-nav\">\n                    <Form method=\"POST\" onSubmit={(event) => this.handleSubmit(event)}>\n                        <h2>Rent Configurator</h2>\n                        <Form.Group controlId=\"Dates\">\n                            <Row>\n                                <Col>\n                                    <Form.Label>Starting Date</Form.Label>\n                                    <Form.Control type=\"date\" name=\"StartDate\" value={this.state.StartDate} min={moment().format('YYYY-MM-DD')} max={this.state.EndDate}\n                                        onChange={(ev) => this.updateField(ev.target.name, ev.target.value)} required />\n                                </Col>\n                                <Col>\n                                    <Form.Label>Ending Date</Form.Label>\n                                    <Form.Control type=\"date\" name=\"EndDate\" value={this.state.EndDate} min = {this.state.StartDate}\n                                        onChange={(ev) => this.updateField(ev.target.name, ev.target.value)} required />\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <Form.Group>\n                            <Row>\n                                <Col>\n                                    <Form.Label>Car's Category</Form.Label>\n                                    <Form.Control as=\"select\" name=\"category\" value={this.state.category} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)}>\n                                        <option value=''> </option>\n                                        {this.props.categories.map((cat) => <CategoryOption key={cat} category={cat} />)}\n                                    </Form.Control>\n                                </Col>\n                                <Col>\n                                    <Form.Label>Driver's Age</Form.Label>\n                                    <Form.Control as=\"select\" name=\"ageType\" value={this.state.ageType} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)}>\n                                        <option>less than 25</option>\n                                        <option>less than 65</option>\n                                        <option>more than 65</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <Form.Group>\n                            <Row>\n                                <Col>\n                                    <Form.Label>Additional Drivers</Form.Label>\n                                    <Form.Control as=\"select\" name=\"additionalDriver\" value={this.state.additionalDriver} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)}>\n                                        <option>NO</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Form.Control>\n                                </Col>\n                                <Col>\n                                    <Form.Label>Km per day</Form.Label>\n                                    <Form.Control as=\"select\" name=\"kmType\" value={this.state.kmType} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)}>\n                                        <option>less than 50 km/day</option>\n                                        <option>less than 150 km/day</option>\n                                        <option>unlimited</option>\n                                    </Form.Control>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <Form.Group>\n                            <Col xs=\"auto\">\n                                <Form.Check type=\"checkbox\" name=\"extraInsurance\" label=\"Additional insurance?\" value={this.state.extraInsurance} onChange={(ev) => this.updateField(ev.target.name, ev.target.checked)} />\n                            </Col>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" disabled={!this.state.category || Object.keys(this.state.filteredavailableCars).length === 0 }>\n                                Choose and Pay</Button>\n\n                    </Form>\n\n                    <h3>Available Cars:  {(!this.state.StartDate || !this.state.EndDate) && <Badge variant=\"secondary\">Insert Data Interval please</Badge>}\n                        {(this.state.StartDate && this.state.EndDate) && <Row>\n                            <GetAvailableCars handleErrors={this.props.handleErrors} updateAvailableCars={this.updateAvailableCars}\n                                StartDate={this.state.StartDate} EndDate={this.state.EndDate} availableCars={this.state.availableCars} \n                                category={this.state.category} cars={this.props.cars} updateAvailableFilteredCars={this.updateAvailableFilteredCars}/>\n                            {(!this.state.category) && <Badge variant=\"secondary\">Insert Category for price</Badge>}\n                        </Row>}\n\n                    </h3>\n\n                    <h3>\n                        {(this.state.StartDate && this.state.EndDate && this.state.category) &&\n                            <PriceCalculator cars={this.props.cars} availableCars={this.state.availableCars} category={this.state.category}\n                                StartDate={this.state.StartDate} EndDate={this.state.EndDate} ageType={this.state.ageType} additionalDriver={this.state.additionalDriver}\n                                extraInsurance={this.state.extraInsurance} kmType={this.state.kmType} rents={this.props.rents}\n                                updateCost={this.updateCost} cost={this.state.cost}/>}\n                    </h3>\n\n                </Col>\n            </Row>\n        )\n    }\n\n}\n\nfunction GetAvailableCars(props) {\n    let tmp;\n    API.availableCars(props.StartDate, props.EndDate)\n        .then((carsId) => { tmp = carsId.map((c) => {return c.id})\n            props.updateAvailableCars(tmp) })\n        .catch((errorObj) => {\n            props.handleErrors(errorObj)\n        }) //Condition for filter by category\n    \n    let availableCarsObjects = props.cars.filter((c) => {\n        if(props.availableCars.includes(c.id))\n            return true\n    })\n   \n    \n    // Se filtro category attivo\n    let filteredCars = [];\n    if(props.category){\n        filteredCars = availableCarsObjects.filter((car) => {\n            if(car.category === props.category){\n                return true\n            }\n        })\n        \n    }\n\n    let filteredCarsId = filteredCars.map((c) => {return c.id});\n    props.updateAvailableFilteredCars(filteredCarsId)\n    \n    \n\n    if(!props.category){\n        return <><h3>{<Badge variant=\"light\">{Object.keys(props.availableCars).length}</Badge>}</h3></>\n    }else{\n        // stampo il numero aggiornato con le categorie\n    return <><h3>{<Badge variant=\"light\">{Object.keys(filteredCars).length} </Badge>}{<Badge variant=\"secondary\">in this category</Badge>}</h3></>\n    }\n\n}\n\nfunction PriceCalculator(props) {\n    if (Object.keys(props.availableCars).length === 0) {\n        return <> No available cars</>\n    }\n    //return <>Prezzo</>\n    let price = 0;\n    // Choose the car's category\n    switch (props.category) {\n        case \"A\": price += 80;\n            break;\n        case 'B': price += 70;\n            break;\n        case 'C': price += 60;\n            break;\n        case 'D': price += 50;\n            break;\n        case 'E': price += 40;\n            break;\n    }\n\n    let a = moment(props.EndDate);\n    let b = moment(props.StartDate);\n    let days = a.diff(b,'days');\n    days +=1;\n    // Days of rent\n    price = price * days;\n\n    // Km options\n    let kmOption = 1;\n    if(props.kmType === \"less than 50 km/day\"){\n        kmOption = 0.95;\n    }\n\n    if(props.kmType === \"unlimited\"){\n        kmOption = 1.05\n    }\n\n    let driverOption = 1;\n    if(props.ageType === \"less than 25\"){\n        driverOption = 1.05;\n    }\n    if(props.ageType === \"more than 65\"){\n        driverOption = 1.1;\n    }\n\n    let additionalDriverOption = 1;\n    if(props.additionalDriver != \"NO\"){\n        additionalDriverOption = 1.15;\n    }\n\n    let extraInsuranceOption = 1;\n    if(props.extraInsurance){\n        extraInsuranceOption = 1.2;\n    }\n\n    let frequentOption = 1;\n    const pastRents = props.rents.filter((rent) => {\n        if (moment(rent.StartDate).isBefore(moment()))\n            return true\n    })\n\n    if(Object.keys(pastRents).length >= 3){\n        frequentOption = 0.9;\n    }\n\n    // filtro per il 10 % di veicoli per categoria\n    let filteredCars = props.cars.filter((c) => {\n        if(c.category === props.category){\n            return true\n        }\n    })\n    let totalCarsNumber = Object.keys(filteredCars).length;\n\n    // Ragionamento come nel calcolo delle auto per categoria disponibili\n    let availableCarsObjects = props.cars.filter((c) => {\n        if(props.availableCars.includes(c.id))\n            return true\n    })\n    if(props.category){\n        filteredCars = availableCarsObjects.filter((car) => {\n            if(car.category === props.category){\n                return true\n            }\n        }) \n    }\n    let availableCarsNumber = Object.keys(filteredCars).length;\n\n    let garageOption = 1;\n    if(availableCarsNumber < (totalCarsNumber * 0.1)){\n        garageOption = 1.1;\n    }\n\n\n\n    let finalPrice = price * kmOption * driverOption * additionalDriverOption * extraInsuranceOption * garageOption *frequentOption ;\n    if(finalPrice){\n        finalPrice = finalPrice.toFixed(2)\n        if(finalPrice !== props.cost){\n            props.updateCost(finalPrice)\n        }\n        \n    }\n    return <><h3>{<Badge variant=\"light\">{props.cost} € </Badge>}</h3></>\n\n\n\n\n}\n\n\nexport default Configurator;"]},"metadata":{},"sourceType":"module"}