{"ast":null,"code":"var _jsxFileName = \"/home/kali/Desktop/AW1/exam/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport API from './API/API'; //import {Redirect, Route,Link} from 'react-router-dom';\n//import {Switch} from 'react-router-dom';        //modified before it was react-router\n//import { withRouter } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport NavBar from './Components/NavBar';\nimport SideBar from './Components/SideBar';\nimport { AuthContext } from './auth/AuthContext';\nimport { Row, Col, Container } from 'react-bootstrap';\n\nfunction App(props) {\n  const [cars, setCars] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [filters, setFilters] = useState({\n    activeBrands: [],\n    activeCategories: []\n  });\n  const [loginStatus, setLoginStatus] = useState({\n    isLoggedIn: false,\n    loginError: false,\n    username: '',\n    userId: ''\n  });\n  const [rents, setRents] = useState([]);\n  const [funziona, setFunziona] = useState(false); // Need to start with loading: false to check if user already is logged in\n\n  const [loading, setLoading] = useState(false); // Error message received by an API call\n\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleErrors = errorObj => {\n    if (errorObj) {\n      if (errorObj.status && errorObj.status === 401) {\n        // isLoggedIn false redirects to /cars\n        setTimeout(() => {\n          setLoginStatus({\n            isLoggedIn: false,\n            loginError: false,\n            user: loginStatus.user\n          });\n          setErrorMsg('');\n        }, 2000);\n      }\n\n      const err0 = errorObj.errors[0];\n      const errorString = err0.param + ': ' + err0.msg;\n      setErrorMsg(errorString);\n      setLoading(false);\n    }\n  };\n\n  const loadInitialData = () => {\n    const promises = [API.getCars(), API.getBrands(), API.getCategories()];\n    Promise.all(promises).then(([c, b, ca]) => {\n      setCars(c);\n      setBrands(b);\n      setCategories(ca);\n      setLoading(false);\n    }).catch(errorObj => {\n      handleErrors(errorObj);\n    });\n  };\n\n  const loadLoggedData = () => {\n    const promise = API.getRents(loginStatus.userId);\n    Promise.resolve(promise).then(rents => {\n      setRents(rents);\n    }).catch(errorObj => {\n      handleErrors(errorObj);\n    });\n  }; // if user is not logged retrieve the public data (default)\n  // if user is logged retrieve the private and public data \n\n\n  useEffect(() => {\n    if (loginStatus.isLoggedIn) {\n      API.isAuthenticated().then(userInfo => {\n        setLoginStatus({\n          isLoggedIn: true,\n          username: userInfo.name,\n          userId: userInfo.userID,\n          loginError: loginStatus.loginError\n        });\n        loadLoggedData(); //if (cars.length === 0 || brands.length === 0 || categories.length === 0)          //se per errore non sono stati caricati i dati iniziali\n        //loadInitialData();\n      }).catch(errorObj => {\n        if (errorObj.status && errorObj.status === 401) {\n          // setting isLoggedIn to false redirects to /login\n          setLoginStatus({\n            isLoggedIn: false,\n            loginError: false,\n            username: loginStatus.username,\n            userId: loginStatus.userId\n          });\n          setLoading(false);\n          setErrorMsg('');\n        }\n      });\n    } else {\n      setLoading(true);\n      loadInitialData();\n      console.log(brands);\n    }\n  }, [brands, cars, categories]);\n\n  const cancelErrorMsg = () => {\n    setErrorMsg('');\n  }; // logout method\n\n\n  const userLogout = () => {\n    API.userLogout().then(() => {\n      setLoginStatus({\n        isLoggedIn: false,\n        username: '',\n        userId: '',\n        loginError: loginStatus.loginError\n      });\n    });\n  };\n\n  const setLoggedInUser = user => {\n    setLoginStatus({\n      isLoggedIn: true,\n      username: user.name,\n      userId: user.userID,\n      loginError: false\n    });\n    setLoading(true);\n    loadInitialData();\n  };\n\n  const deleteRent = rent => {\n    API.deleteRent(rent.invoice).then(() => {\n      API.getRents().then(rents => setRents(rents));\n    }).catch(errorObj => {\n      handleErrors(errorObj);\n    });\n  };\n\n  const addRent = rent => {\n    API.addRent(rent).then(() => {\n      API.getRents().then(rents => setRents(rents));\n    }).catch(errorObj => {\n      handleErrors(errorObj);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    render: props => {\n      if (loginStatus.isLoggedIn) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 20\n        }\n      }); // da reindirizzare alla pagina del configuratore \n      else return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/cars\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Container, {\n          fluid: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(NavBar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          className: \"vheight-100\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          sm: 4,\n          className: \"below-nav\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }\n        }, \"Public Tasks\")), /*#__PURE__*/React.createElement(SideBar, {\n          activeBrands: filters.activeBrands,\n          activeCategories: filters.activeCategories,\n          brands: brands,\n          categories: categories,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }\n        })))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kali/Desktop/AW1/exam/client/src/App.js"],"names":["React","useState","useEffect","API","BrowserRouter","Router","Route","Switch","Redirect","NavBar","SideBar","AuthContext","Row","Col","Container","App","props","cars","setCars","brands","setBrands","categories","setCategories","filters","setFilters","activeBrands","activeCategories","loginStatus","setLoginStatus","isLoggedIn","loginError","username","userId","rents","setRents","funziona","setFunziona","loading","setLoading","errorMsg","setErrorMsg","handleErrors","errorObj","status","setTimeout","user","err0","errors","errorString","param","msg","loadInitialData","promises","getCars","getBrands","getCategories","Promise","all","then","c","b","ca","catch","loadLoggedData","promise","getRents","resolve","isAuthenticated","userInfo","name","userID","console","log","cancelErrorMsg","userLogout","setLoggedInUser","deleteRent","rent","invoice","addRent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport API from './API/API'\n//import {Redirect, Route,Link} from 'react-router-dom';\n//import {Switch} from 'react-router-dom';        //modified before it was react-router\n//import { withRouter } from 'react-router-dom';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport NavBar from './Components/NavBar'\nimport SideBar from './Components/SideBar'\nimport { AuthContext } from './auth/AuthContext'\nimport { Row, Col, Container } from 'react-bootstrap'\n\n\nfunction App(props) {\n  const [cars, setCars] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [filters, setFilters] = useState({ activeBrands: [], activeCategories: [] });\n  const [loginStatus, setLoginStatus] = useState({ isLoggedIn: false, loginError: false, username: '', userId: '' });\n  const [rents, setRents] = useState([]);\n  const [funziona,setFunziona] = useState(false);\n\n  // Need to start with loading: false to check if user already is logged in\n  const [loading, setLoading] = useState(false);\n\n  // Error message received by an API call\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleErrors = (errorObj) => {\n    if (errorObj) {\n      if (errorObj.status && errorObj.status === 401) {\n        // isLoggedIn false redirects to /cars\n        setTimeout(() => {\n          setLoginStatus({ isLoggedIn: false, loginError: false, user: loginStatus.user });\n          setErrorMsg('');\n        }, 2000);\n      }\n      const err0 = errorObj.errors[0];\n      const errorString = err0.param + ': ' + err0.msg;\n      setErrorMsg(errorString);\n      setLoading(false);\n    }\n  };\n\n  const loadInitialData = () => {\n    const promises = [API.getCars(), API.getBrands(), API.getCategories()];\n    Promise.all(promises).then(\n      ([c, b, ca]) => {\n        \n        setCars(c);\n        setBrands(b);\n        setCategories(ca);   \n        setLoading(false); \n      }\n    ).catch(\n      (errorObj) => {\n        handleErrors(errorObj);\n      }\n    );\n  };\n\n  const loadLoggedData = () => {\n    const promise = API.getRents(loginStatus.userId);\n    Promise.resolve(promise).then((rents) => {\n      setRents(rents);\n    }).catch(\n      (errorObj) => {\n        handleErrors(errorObj);\n      }\n    );\n\n  }\n\n\n  // if user is not logged retrieve the public data (default)\n  // if user is logged retrieve the private and public data \n  useEffect(() => {\n    if (loginStatus.isLoggedIn) {\n      API.isAuthenticated().then((userInfo) => {\n        setLoginStatus({ isLoggedIn: true, username: userInfo.name, userId: userInfo.userID, loginError: loginStatus.loginError });\n        loadLoggedData();\n        //if (cars.length === 0 || brands.length === 0 || categories.length === 0)          //se per errore non sono stati caricati i dati iniziali\n        //loadInitialData();\n      }).catch((errorObj) => {\n        if (errorObj.status && errorObj.status === 401) {\n          // setting isLoggedIn to false redirects to /login\n          setLoginStatus({ isLoggedIn: false, loginError: false, username: loginStatus.username, userId: loginStatus.userId });\n          setLoading(false);\n          setErrorMsg('');\n        }\n      })\n    } else {\n      setLoading(true)\n      loadInitialData();\n      \n      console.log(brands)\n     \n    }\n  },[brands,cars,categories] );\n\n  const cancelErrorMsg = () => {\n    setErrorMsg('');\n  }\n\n  // logout method\n  const userLogout = () => {\n    API.userLogout().then(\n      () => { setLoginStatus({ isLoggedIn: false, username: '', userId: '', loginError: loginStatus.loginError }) }\n    );\n  }\n\n  const setLoggedInUser = (user) => {\n    setLoginStatus({ isLoggedIn: true, username: user.name, userId: user.userID, loginError: false });\n    setLoading(true);\n    loadInitialData();\n  }\n\n  const deleteRent = (rent) => {\n    API.deleteRent(rent.invoice).then(() => {\n      API.getRents().then((rents) => setRents(rents))\n    }).catch(\n      (errorObj) => {\n        handleErrors(errorObj);\n      }\n    );\n  }\n\n  const addRent = (rent) => {\n    API.addRent(rent).then(() => {\n      API.getRents().then((rents) => setRents(rents))\n    }).catch(\n      (errorObj) => {\n        handleErrors(errorObj);\n      }\n    );\n  }\n\n\n  return (\n    <Router>\n\n      <Switch>\n        <Route path='/' render={(props) => {\n          if (loginStatus.isLoggedIn)\n            return <Redirect to='/' />  // da reindirizzare alla pagina del configuratore \n          else\n            return <>\n              <Redirect to='/cars' />\n              <Container fluid>\n                <NavBar />\n                \n                <Row className=\"vheight-100\">\n                  <Col sm={4} className=\"below-nav\">\n                    <h5><strong>Public Tasks</strong></h5>\n                    <SideBar activeBrands ={filters.activeBrands} activeCategories ={filters.activeCategories}\n                    brands={brands} categories={categories}/>\n                  </Col>\n                </Row>\n              </Container>\n\n            </>\n        }}>\n\n        </Route>\n      </Switch>\n\n\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}